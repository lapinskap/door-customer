{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/paulina/door-custom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/paulina/door-custom/src/auth/SignIn.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    font-weight: 700;\\n    color:  #4ec2e2;\\n    font-size: 14px;\\n    &:hover {\\n        color:  #4ec2e2;\\n        text-decoration: none;\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-top: 20px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    color: #727272;\\n    margin: 30px 0px;\\n    font-size: 24px;\\n    font-weight: 300;\\n    display: flex;\\n    justify-content: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Field } from \"react-final-form\";\nimport AuthTemplate from \"./AuthTemplate\";\nimport renderInput from \"../components/form/Input\";\nimport { sleep } from \"../lib/utils\";\nimport { composeValidators, required, email } from \"../lib/validation\";\nimport { Link } from \"react-router-dom\";\nimport MyField from \"../components/form/MyField\";\nimport RenderNavbar from \"../components/menu/Navbar\";\nimport ModalScreen from \"../ModalScreen\";\nimport { Button } from 'reactstrap';\nimport renderCheckbox from \"../components/form/Checkbox\";\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      alert('A username and password  was submitted: ' + this.state.email + this.state.password);\n      event.preventDefault();\n\n      try {\n        fetch('https://bench-api.applover.pl/api/v1/login', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Host': 'example.org',\n            'Cookie': ''\n          },\n          body: JSON.stringify({\n            \"email\": this.state.email,\n            \"password\": this.state.password\n          })\n        }).then(response => response.json()).then(data => this.setState({\n          response: data\n        })).then(() => {\n          if (this.state.response.status === \"200 OK\") {\n            alert(\"yay!\");\n            window.sessionStorage.isAuthenticated = true;\n            if (this.state.keep === true) window.localStorage.isAuthenticated = true;\n            console.log(window.localStorage.isAuthenticated);\n            console.log(this.state.keep);\n            this.props.history.push(\"/dashboard\");\n          } else {\n            alert(this.state.response.status);\n          }\n        });\n      } catch (e) {\n        alert(e.message);\n      }\n    };\n\n    this.onSubmit = async data => {\n      await sleep(2000);\n      console.log(data);\n    };\n\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      response: '',\n      keep: false,\n      visible: false\n    };\n  }\n\n  handleChangeEmail(event) {\n    this.setState({\n      email: event\n    });\n    console.log(event);\n  }\n\n  handleChangePassword(event) {\n    console.log(event);\n    this.setState({\n      password: event.target.password\n    });\n  } //   email: \"login@applover.pl\",\n  //   password: \"password123\"\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(RenderNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ModalScreen, {\n      visible: this.state.visible,\n      width: \"100%\",\n      height: \"100%\",\n      effect: \"fadeInUp\",\n      onClickAway: () => this.closeModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(AuthTemplate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      render: ({\n        handleSubmit\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(MyField, {\n        name: \"email\",\n        component: renderInput,\n        type: \"text\",\n        placeholder: \"Email address\",\n        validate: composeValidators(required, email),\n        value: this.state.email //I had trouble using setState with onChange event on final-form field\n        ,\n        onChange: val => this.state.email = val,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(MyField, {\n        name: \"password\",\n        component: renderInput,\n        type: \"password\",\n        placeholder: \"Password\",\n        validate: required,\n        value: this.state.password,\n        onChange: val => this.state.password = val,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(MyField, {\n        type: \"checkbox\",\n        name: \"tos\",\n        component: renderCheckbox,\n        value: this.state.keep,\n        onChange: () => this.state.keep = true,\n        label: \"Keep me logged in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(TextLink, {\n        to: \"/resetpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Forgot password?\"), React.createElement(TextLink, {\n        to: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Sign up\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst Title = styled.div(_templateObject());\nconst Footer = styled.div(_templateObject2());\nconst Info = styled.div(_templateObject3());\nconst TextLink = styled(Link)(_templateObject4());\nexport default SignIn;","map":{"version":3,"sources":["/home/paulina/door-custom/src/auth/SignIn.js"],"names":["React","Component","styled","Form","Field","AuthTemplate","renderInput","sleep","composeValidators","required","email","Link","MyField","RenderNavbar","ModalScreen","Button","renderCheckbox","SignIn","constructor","props","handleSubmit","event","alert","state","password","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","status","window","sessionStorage","isAuthenticated","keep","localStorage","console","log","history","push","e","message","onSubmit","handleChangePassword","bind","handleChangeEmail","visible","target","render","closeModal","val","Title","div","Footer","Info","TextLink"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport {Form, Field} from \"react-final-form\";\nimport AuthTemplate from \"./AuthTemplate\";\nimport renderInput from \"../components/form/Input\";\nimport {sleep} from \"../lib/utils\";\nimport {composeValidators, required, email} from \"../lib/validation\";\nimport {Link} from \"react-router-dom\";\nimport MyField from \"../components/form/MyField\";\nimport RenderNavbar from \"../components/menu/Navbar\";\nimport ModalScreen from \"../ModalScreen\";\n\n\n\nimport {\n    Button,\n    } from 'reactstrap';\nimport renderCheckbox from \"../components/form/Checkbox\";\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n          email: '',\n          password: '',\n          response: '',\n          keep: false,\n          visible: false\n        };\n      }\n\n    handleChangeEmail(event) {\n        this.setState({email: event});\n        console.log(event);\n\n    }\n\n    handleChangePassword(event) {\n        console.log(event);\n        this.setState({password: event.target.password});\n    }\n\n\n    //   email: \"login@applover.pl\",\n    //   password: \"password123\"\n\n    handleSubmit = async event => {\n        alert('A username and password  was submitted: ' + this.state.email + this.state.password);\n        event.preventDefault();\n        try {\n            fetch('https://bench-api.applover.pl/api/v1/login', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Host': 'example.org',\n                    'Cookie': ''\n                },\n                body: JSON.stringify({\n                    \"email\": this.state.email,\n                    \"password\": this.state.password\n                })\n                }).then(response => response.json())\n                .then(data => this.setState({ response: data }))\n                .then(() => { if(this.state.response.status === \"200 OK\") {\n                    alert(\"yay!\");\n\n                    window.sessionStorage.isAuthenticated = true;\n                    if(this.state.keep === true) window.localStorage.isAuthenticated = true;\n                    console.log(window.localStorage.isAuthenticated);\n                    console.log(this.state.keep);\n\n\n                    this.props.history.push(\"/dashboard\");\n\n                } else {\n                    alert(this.state.response.status);\n                }\n                });\n\n\n        } catch (e) {\n          alert(e.message);\n        }\n    }\n\n    onSubmit = async data => {\n        await sleep(2000);\n        console.log(data);\n\n      };\n\n    render() {\n        return(\n        <div>\n        <RenderNavbar />\n        <ModalScreen visible={this.state.visible} width=\"100%\" height=\"100%\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}></ModalScreen>\n            <AuthTemplate>\n                <Title>Log in</Title>\n                    <Form onSubmit={this.onSubmit}\n                        render={({ handleSubmit}) => (\n                            <form onSubmit={handleSubmit}>\n                                <MyField\n                                    name=\"email\"\n                                    component={renderInput}\n                                    type=\"text\"\n                                    placeholder=\"Email address\"\n                                    validate={composeValidators(required, email)}\n                                    value={this.state.email}\n                                    //I had trouble using setState with onChange event on final-form field\n                                    onChange={(val) => this.state.email = val}\n                                />\n\n                                <MyField\n                                    name=\"password\"\n                                    component={renderInput}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    validate={required}\n                                    value={this.state.password}\n                                    onChange={(val) => this.state.password = val}\n                                />\n                                <MyField\n                                    type=\"checkbox\"\n                                    name=\"tos\"\n                                    component={renderCheckbox}\n                                    value={this.state.keep}\n                                    onChange={() => this.state.keep = true}\n                                    label=\"Keep me logged in\"\n                                />\n                                <Footer>\n                                    <Button color=\"primary\" className=\"primary\" onClick={this.handleSubmit}>Login</Button>\n                                </Footer>\n                                <Info>\n                                    <TextLink to={\"/resetpassword\"}>Forgot password?</TextLink>\n                                    <TextLink to={\"/signup\"}>Sign up</TextLink>\n                                </Info>\n                            </form>\n                         )}\n                    />\n            </AuthTemplate>\n        </div>\n        );\n    }\n}\n\nconst Title = styled.div`\n    color: #727272;\n    margin: 30px 0px;\n    font-size: 24px;\n    font-weight: 300;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Footer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 20px;\n`;\n\nconst TextLink = styled(Link)`\n    font-weight: 700;\n    color:  #4ec2e2;\n    font-size: 14px;\n    &:hover {\n        color:  #4ec2e2;\n        text-decoration: none;\n    }\n`;\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}