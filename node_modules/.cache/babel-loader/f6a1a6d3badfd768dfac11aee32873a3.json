{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/paulina/door-custom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/paulina/door-custom/src/auth/SignIn.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    font-weight: 700;\\n    color:  #4ec2e2;\\n    font-size: 14px;\\n    &:hover {\\n        color:  #4ec2e2;\\n        text-decoration: none;\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-top: 20px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    color: #727272;\\n    margin: 30px 0px;\\n    font-size: 24px;\\n    font-weight: 300;\\n    display: flex;\\n    justify-content: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Field } from \"react-final-form\";\nimport AuthTemplate from \"./AuthTemplate\";\nimport renderInput from \"../components/form/Input\";\nimport { sleep } from \"../lib/utils\";\nimport { composeValidators, required, email } from \"../lib/validation\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'reactstrap';\nimport renderCheckbox from \"../components/form/Checkbox\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = async data => {\n      await sleep(2000);\n      console.log(data);\n    };\n  }\n\n  render() {\n    const request = new XMLHttpRequest();\n    request.open('POST', 'https://bench-api.applover.pl/api/v1/login', true);\n\n    request.onload = function () {\n      const data = JSON.parse(this.response);\n\n      if (request.status >= 200 && request.status < 400) {\n        console.log(data);\n      } else {\n        console.log('error');\n      }\n    };\n\n    request.send();\n\n    function TasksViewModel() {\n      var self = this;\n      self.tasksURI = 'http://localhost:5000/todo/api/v1.0/tasks';\n      self.username = \"miguel\";\n      self.password = \"python\";\n      self.tasks = ko.observableArray();\n\n      self.ajax = function (uri, method, data) {\n        var request = {\n          url: uri,\n          type: method,\n          contentType: \"application/json\",\n          accepts: \"application/json\",\n          cache: false,\n          dataType: 'json',\n          data: JSON.stringify(data),\n          beforeSend: function (xhr) {\n            xhr.setRequestHeader(\"Authorization\", \"Basic \" + btoa(self.username + \":\" + self.password));\n          },\n          error: function (jqXHR) {\n            console.log(\"ajax error \" + jqXHR.status);\n          }\n        };\n        return $.ajax(request);\n      };\n\n      self.beginAdd = function () {\n        alert(\"Add\");\n      };\n\n      self.beginEdit = function (task) {\n        alert(\"Edit: \" + task.title());\n      };\n\n      self.remove = function (task) {\n        alert(\"Remove: \" + task.title());\n      };\n\n      self.markInProgress = function (task) {\n        task.done(false);\n      };\n\n      self.markDone = function (task) {\n        task.done(true);\n      };\n\n      self.ajax(self.tasksURI, 'GET').done(function (data) {\n        for (var i = 0; i < data.tasks.length; i++) {\n          self.tasks.push({\n            uri: ko.observable(data.tasks[i].uri),\n            title: ko.observable(data.tasks[i].title),\n            description: ko.observable(data.tasks[i].description),\n            done: ko.observable(data.tasks[i].done)\n          });\n        }\n      });\n    }\n\n    return React.createElement(AuthTemplate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      render: ({\n        handleSubmit,\n        pristine,\n        invalid\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"email\",\n        component: renderInput,\n        type: \"text\",\n        placeholder: \"Email address\",\n        validate: composeValidators(required, email),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        component: renderInput,\n        type: \"password\",\n        placeholder: \"Password\",\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Field, {\n        type: \"checkbox\",\n        name: \"tos\",\n        component: renderCheckbox,\n        label: \"Keep me logged in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(TextLink, {\n        to: \"/resetpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Forgot password?\"), React.createElement(TextLink, {\n        to: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Sign up\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Title = styled.div(_templateObject());\nconst Footer = styled.div(_templateObject2());\nconst Info = styled.div(_templateObject3());\nconst TextLink = styled(Link)(_templateObject4());\nexport default SignIn;","map":{"version":3,"sources":["/home/paulina/door-custom/src/auth/SignIn.js"],"names":["React","Component","styled","Form","Field","AuthTemplate","renderInput","sleep","composeValidators","required","email","Link","Button","renderCheckbox","SignIn","onSubmit","data","console","log","render","request","XMLHttpRequest","open","onload","JSON","parse","response","status","send","TasksViewModel","self","tasksURI","username","password","tasks","ko","observableArray","ajax","uri","method","url","type","contentType","accepts","cache","dataType","stringify","beforeSend","xhr","setRequestHeader","btoa","error","jqXHR","$","beginAdd","alert","beginEdit","task","title","remove","markInProgress","done","markDone","i","length","push","observable","description","handleSubmit","pristine","invalid","toggle","Title","div","Footer","Info","TextLink"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,iBAAR,EAA2BC,QAA3B,EAAqCC,KAArC,QAAiD,mBAAjD;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,SACIC,MADJ,QAEW,YAFX;AAGA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,MAAMC,MAAN,SAAqBb,SAArB,CAA8B;AAAA;AAAA;;AAAA,SAC1Bc,QAD0B,GACf,MAAMC,IAAN,IAAc;AACrB,YAAMT,KAAK,CAAC,IAAD,CAAX;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAED,KALuB;AAAA;;AAO1BG,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAI,IAAIC,cAAJ,EAAjB;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,MAAb,EAAqB,4CAArB,EAAmE,IAAnE;;AACAF,IAAAA,OAAO,CAACG,MAAR,GAAiB,YAAY;AAC3B,YAAMP,IAAI,GAAGQ,IAAI,CAACC,KAAL,CAAW,KAAKC,QAAhB,CAAb;;AAEA,UAAIN,OAAO,CAACO,MAAR,IAAkB,GAAlB,IAAyBP,OAAO,CAACO,MAAR,GAAiB,GAA9C,EAAmD;AACjDV,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAEA,KATH;;AAWAE,IAAAA,OAAO,CAACQ,IAAR;;AAEA,aAASC,cAAT,GAA0B;AACtB,UAAIC,IAAI,GAAG,IAAX;AACAA,MAAAA,IAAI,CAACC,QAAL,GAAgB,2CAAhB;AACAD,MAAAA,IAAI,CAACE,QAAL,GAAgB,QAAhB;AACAF,MAAAA,IAAI,CAACG,QAAL,GAAgB,QAAhB;AACAH,MAAAA,IAAI,CAACI,KAAL,GAAaC,EAAE,CAACC,eAAH,EAAb;;AAEAN,MAAAA,IAAI,CAACO,IAAL,GAAY,UAASC,GAAT,EAAcC,MAAd,EAAsBvB,IAAtB,EAA4B;AACpC,YAAII,OAAO,GAAG;AACVoB,UAAAA,GAAG,EAAEF,GADK;AAEVG,UAAAA,IAAI,EAAEF,MAFI;AAGVG,UAAAA,WAAW,EAAE,kBAHH;AAIVC,UAAAA,OAAO,EAAE,kBAJC;AAKVC,UAAAA,KAAK,EAAE,KALG;AAMVC,UAAAA,QAAQ,EAAE,MANA;AAOV7B,UAAAA,IAAI,EAAEQ,IAAI,CAACsB,SAAL,CAAe9B,IAAf,CAPI;AAQV+B,UAAAA,UAAU,EAAE,UAAUC,GAAV,EAAe;AACvBA,YAAAA,GAAG,CAACC,gBAAJ,CAAqB,eAArB,EACI,WAAWC,IAAI,CAACpB,IAAI,CAACE,QAAL,GAAgB,GAAhB,GAAsBF,IAAI,CAACG,QAA5B,CADnB;AAEH,WAXS;AAYVkB,UAAAA,KAAK,EAAE,UAASC,KAAT,EAAgB;AACnBnC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBkC,KAAK,CAACzB,MAAlC;AACH;AAdS,SAAd;AAgBA,eAAO0B,CAAC,CAAChB,IAAF,CAAOjB,OAAP,CAAP;AACH,OAlBD;;AAoBAU,MAAAA,IAAI,CAACwB,QAAL,GAAgB,YAAW;AACvBC,QAAAA,KAAK,CAAC,KAAD,CAAL;AACH,OAFD;;AAGAzB,MAAAA,IAAI,CAAC0B,SAAL,GAAiB,UAASC,IAAT,EAAe;AAC5BF,QAAAA,KAAK,CAAC,WAAWE,IAAI,CAACC,KAAL,EAAZ,CAAL;AACH,OAFD;;AAGA5B,MAAAA,IAAI,CAAC6B,MAAL,GAAc,UAASF,IAAT,EAAe;AACzBF,QAAAA,KAAK,CAAC,aAAaE,IAAI,CAACC,KAAL,EAAd,CAAL;AACH,OAFD;;AAGA5B,MAAAA,IAAI,CAAC8B,cAAL,GAAsB,UAASH,IAAT,EAAe;AACjCA,QAAAA,IAAI,CAACI,IAAL,CAAU,KAAV;AACH,OAFD;;AAGA/B,MAAAA,IAAI,CAACgC,QAAL,GAAgB,UAASL,IAAT,EAAe;AAC3BA,QAAAA,IAAI,CAACI,IAAL,CAAU,IAAV;AACH,OAFD;;AAIA/B,MAAAA,IAAI,CAACO,IAAL,CAAUP,IAAI,CAACC,QAAf,EAAyB,KAAzB,EAAgC8B,IAAhC,CAAqC,UAAS7C,IAAT,EAAe;AAChD,aAAK,IAAI+C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/C,IAAI,CAACkB,KAAL,CAAW8B,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxCjC,UAAAA,IAAI,CAACI,KAAL,CAAW+B,IAAX,CAAgB;AACZ3B,YAAAA,GAAG,EAAEH,EAAE,CAAC+B,UAAH,CAAclD,IAAI,CAACkB,KAAL,CAAW6B,CAAX,EAAczB,GAA5B,CADO;AAEZoB,YAAAA,KAAK,EAAEvB,EAAE,CAAC+B,UAAH,CAAclD,IAAI,CAACkB,KAAL,CAAW6B,CAAX,EAAcL,KAA5B,CAFK;AAGZS,YAAAA,WAAW,EAAEhC,EAAE,CAAC+B,UAAH,CAAclD,IAAI,CAACkB,KAAL,CAAW6B,CAAX,EAAcI,WAA5B,CAHD;AAIZN,YAAAA,IAAI,EAAE1B,EAAE,CAAC+B,UAAH,CAAclD,IAAI,CAACkB,KAAL,CAAW6B,CAAX,EAAcF,IAA5B;AAJM,WAAhB;AAMH;AACJ,OATD;AAUH;;AAED,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEQ,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK9C,QAArB;AACI,MAAA,MAAM,EAAE,CAAC;AAAEqD,QAAAA,YAAF;AAAgBC,QAAAA,QAAhB;AAA0BC,QAAAA;AAA1B,OAAD,KACJ;AAAM,QAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,SAAS,EAAE9D,WAFf;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,WAAW,EAAC,eAJhB;AAKI,QAAA,QAAQ,EAAEE,iBAAiB,CAACC,QAAD,EAAWC,KAAX,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,SAAS,EAAEJ,WAFf;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,WAAW,EAAC,UAJhB;AAKI,QAAA,QAAQ,EAAEG,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAeI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,KAFT;AAGI,QAAA,SAAS,EAAEI,cAHf;AAII,QAAA,KAAK,EAAC,mBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAqBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,SAAS,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE,KAAK0D,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CArBJ,EAwBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAxBJ,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ;AAsCH;;AApHyB;;AAuH9B,MAAMC,KAAK,GAAGtE,MAAM,CAACuE,GAAV,mBAAX;AASA,MAAMC,MAAM,GAAGxE,MAAM,CAACuE,GAAV,oBAAZ;AAMA,MAAME,IAAI,GAAGzE,MAAM,CAACuE,GAAV,oBAAV;AAOA,MAAMG,QAAQ,GAAG1E,MAAM,CAACS,IAAD,CAAT,oBAAd;AAUA,eAAeG,MAAf","sourcesContent":["import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport {Form, Field} from \"react-final-form\";\nimport AuthTemplate from \"./AuthTemplate\";\nimport renderInput from \"../components/form/Input\";\nimport {sleep} from \"../lib/utils\";\nimport {composeValidators, required, email} from \"../lib/validation\";\nimport {Link} from \"react-router-dom\";\n\nimport {\n    Button,\n    } from 'reactstrap';\nimport renderCheckbox from \"../components/form/Checkbox\";\n\nclass SignIn extends Component{\n    onSubmit = async data => {\n        await sleep(2000);\n        console.log(data);\n\n      };\n\n    render() {\n        const request =  new XMLHttpRequest();\n        request.open('POST', 'https://bench-api.applover.pl/api/v1/login', true)\n        request.onload = function () {\n          const data = JSON.parse(this.response);\n\n          if (request.status >= 200 && request.status < 400) {\n            console.log(data);\n          } else {\n            console.log('error')\n          }\n\n          }\n\n        request.send()\n\n        function TasksViewModel() {\n            var self = this;\n            self.tasksURI = 'http://localhost:5000/todo/api/v1.0/tasks';\n            self.username = \"miguel\";\n            self.password = \"python\";\n            self.tasks = ko.observableArray();\n\n            self.ajax = function(uri, method, data) {\n                var request = {\n                    url: uri,\n                    type: method,\n                    contentType: \"application/json\",\n                    accepts: \"application/json\",\n                    cache: false,\n                    dataType: 'json',\n                    data: JSON.stringify(data),\n                    beforeSend: function (xhr) {\n                        xhr.setRequestHeader(\"Authorization\",\n                            \"Basic \" + btoa(self.username + \":\" + self.password));\n                    },\n                    error: function(jqXHR) {\n                        console.log(\"ajax error \" + jqXHR.status);\n                    }\n                };\n                return $.ajax(request);\n            }\n\n            self.beginAdd = function() {\n                alert(\"Add\");\n            }\n            self.beginEdit = function(task) {\n                alert(\"Edit: \" + task.title());\n            }\n            self.remove = function(task) {\n                alert(\"Remove: \" + task.title());\n            }\n            self.markInProgress = function(task) {\n                task.done(false);\n            }\n            self.markDone = function(task) {\n                task.done(true);\n            }\n\n            self.ajax(self.tasksURI, 'GET').done(function(data) {\n                for (var i = 0; i < data.tasks.length; i++) {\n                    self.tasks.push({\n                        uri: ko.observable(data.tasks[i].uri),\n                        title: ko.observable(data.tasks[i].title),\n                        description: ko.observable(data.tasks[i].description),\n                        done: ko.observable(data.tasks[i].done)\n                    });\n                }\n            });\n        }\n\n        return(\n            <AuthTemplate>\n                <Title>Log in</Title>\n                    <Form onSubmit={this.onSubmit}\n                        render={({ handleSubmit, pristine, invalid }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Field\n                                    name=\"email\"\n                                    component={renderInput}\n                                    type=\"text\"\n                                    placeholder=\"Email address\"\n                                    validate={composeValidators(required, email)}\n                                />\n                                <Field\n                                    name=\"password\"\n                                    component={renderInput}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    validate={required}\n                                />\n                                <Field\n                                    type=\"checkbox\"\n                                    name=\"tos\"\n                                    component={renderCheckbox}\n                                    label=\"Keep me logged in\"\n                                />\n                                <Footer>\n                                    <Button color=\"primary\" className=\"primary\" onClick={this.toggle}>Login</Button>\n                                </Footer>\n                                <Info>\n                                    <TextLink to={\"/resetpassword\"}>Forgot password?</TextLink>\n                                    <TextLink to={\"/signup\"}>Sign up</TextLink>\n                                </Info>\n                            </form>\n                         )}\n                    />\n            </AuthTemplate>\n        );\n    }\n}\n\nconst Title = styled.div`\n    color: #727272;\n    margin: 30px 0px;\n    font-size: 24px;\n    font-weight: 300;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Footer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 20px;\n`;\n\nconst TextLink = styled(Link)`\n    font-weight: 700;\n    color:  #4ec2e2;\n    font-size: 14px;\n    &:hover {\n        color:  #4ec2e2;\n        text-decoration: none;\n    }\n`;\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}