{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/paulina/door-custom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/paulina/door-custom/src/auth/SignIn.js\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    font-weight: 700;\\n    color:  #4ec2e2;\\n    font-size: 14px;\\n    &:hover {\\n        color:  #4ec2e2;\\n        text-decoration: none;\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-top: 20px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    color: #727272;\\n    margin: 30px 0px;\\n    font-size: 24px;\\n    font-weight: 300;\\n    display: flex;\\n    justify-content: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Field } from \"react-final-form\";\nimport AuthTemplate from \"./AuthTemplate\";\nimport renderInput from \"../components/form/Input\";\nimport { sleep } from \"../lib/utils\";\nimport { composeValidators, required, email } from \"../lib/validation\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'reactstrap';\nimport renderCheckbox from \"../components/form/Checkbox\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = async data => {\n      await sleep(2000);\n      console.log(data);\n    };\n  }\n\n  render() {\n    const request = new XMLHttpRequest();\n    request.open('POST', 'https://bench-api.applover.pl/api/v1/login', true);\n\n    request.onload = function () {\n      const data = JSON.parse(this.response);\n\n      if (request.status >= 200 && request.status < 400) {\n        console.log(data);\n      } else {\n        console.log('error');\n      }\n    };\n\n    request.send();\n\n    const userAction = async () => {\n      const response = await fetch('https://bench-api.applover.pl/api/v1/login', {\n        method: 'POST',\n        body: myBody,\n        // string or object\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const myJson = await response.json(); //extract JSON from the http response\n      // do something with myJson\n\n      console.log(myJson);\n    };\n\n    userAction.send();\n    return React.createElement(AuthTemplate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Log in\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      render: ({\n        handleSubmit,\n        pristine,\n        invalid\n      }) => React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"email\",\n        component: renderInput,\n        type: \"text\",\n        placeholder: \"Email address\",\n        validate: composeValidators(required, email),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        component: renderInput,\n        type: \"password\",\n        placeholder: \"Password\",\n        validate: required,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Field, {\n        type: \"checkbox\",\n        name: \"tos\",\n        component: renderCheckbox,\n        label: \"Keep me logged in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        className: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Login\")), React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextLink, {\n        to: \"/resetpassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Forgot password?\"), React.createElement(TextLink, {\n        to: \"/signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Sign up\"))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Title = styled.div(_templateObject());\nconst Footer = styled.div(_templateObject2());\nconst Info = styled.div(_templateObject3());\nconst TextLink = styled(Link)(_templateObject4());\nexport default SignIn;","map":{"version":3,"sources":["/home/paulina/door-custom/src/auth/SignIn.js"],"names":["React","Component","styled","Form","Field","AuthTemplate","renderInput","sleep","composeValidators","required","email","Link","Button","renderCheckbox","SignIn","onSubmit","data","console","log","render","request","XMLHttpRequest","open","onload","JSON","parse","response","status","send","userAction","fetch","method","body","myBody","headers","myJson","json","handleSubmit","pristine","invalid","toggle","Title","div","Footer","Info","TextLink"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport {Form, Field} from \"react-final-form\";\nimport AuthTemplate from \"./AuthTemplate\";\nimport renderInput from \"../components/form/Input\";\nimport {sleep} from \"../lib/utils\";\nimport {composeValidators, required, email} from \"../lib/validation\";\nimport {Link} from \"react-router-dom\";\n\nimport {\n    Button,\n    } from 'reactstrap';\nimport renderCheckbox from \"../components/form/Checkbox\";\n\nclass SignIn extends Component{\n    onSubmit = async data => {\n        await sleep(2000);\n        console.log(data);\n\n      };\n\n    render() {\n        const request =  new XMLHttpRequest();\n        request.open('POST', 'https://bench-api.applover.pl/api/v1/login', true)\n        request.onload = function () {\n          const data = JSON.parse(this.response);\n\n          if (request.status >= 200 && request.status < 400) {\n            console.log(data);\n          } else {\n            console.log('error')\n          }\n\n          }\n\n        request.send()\n\n        const userAction = async () => {\n            const response = await fetch('https://bench-api.applover.pl/api/v1/login', {\n              method: 'POST',\n              body: myBody, // string or object\n              headers:{\n                'Content-Type': 'application/json'\n              }\n            });\n            const myJson = await response.json(); //extract JSON from the http response\n            // do something with myJson\n\n            console.log(myJson);\n          }\n          userAction.send()\n        return(\n            <AuthTemplate>\n                <Title>Log in</Title>\n                    <Form onSubmit={this.onSubmit}\n                        render={({ handleSubmit, pristine, invalid }) => (\n                            <form onSubmit={handleSubmit}>\n                                <Field\n                                    name=\"email\"\n                                    component={renderInput}\n                                    type=\"text\"\n                                    placeholder=\"Email address\"\n                                    validate={composeValidators(required, email)}\n                                />\n                                <Field\n                                    name=\"password\"\n                                    component={renderInput}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                    validate={required}\n                                />\n                                <Field\n                                    type=\"checkbox\"\n                                    name=\"tos\"\n                                    component={renderCheckbox}\n                                    label=\"Keep me logged in\"\n                                />\n                                <Footer>\n                                    <Button color=\"primary\" className=\"primary\" onClick={this.toggle}>Login</Button>\n                                </Footer>\n                                <Info>\n                                    <TextLink to={\"/resetpassword\"}>Forgot password?</TextLink>\n                                    <TextLink to={\"/signup\"}>Sign up</TextLink>\n                                </Info>\n                            </form>\n                         )}\n                    />\n            </AuthTemplate>\n        );\n    }\n}\n\nconst Title = styled.div`\n    color: #727272;\n    margin: 30px 0px;\n    font-size: 24px;\n    font-weight: 300;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Footer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst Info = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 20px;\n`;\n\nconst TextLink = styled(Link)`\n    font-weight: 700;\n    color:  #4ec2e2;\n    font-size: 14px;\n    &:hover {\n        color:  #4ec2e2;\n        text-decoration: none;\n    }\n`;\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}