{"ast":null,"code":"import _objectWithoutProperties from \"/home/paulina/door-custom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/paulina/door-custom/src/components/form/MyField.js\";\n// import React from \"react\";\n// import { Field } from \"react-final-form\";\n// class MyFieldAdapter extends React.Component {\n//   componentDidUpdate(prevProps) {\n//     if (this.props.meta.active && this.props.onChange) {\n//       this.props.onChange(this.props.input.value, prevProps.input.value);\n//     }\n//   }\n//   render() {\n//     return this.props.children;\n//   }\n// }\n// // Wrap the ExternalModificationDetector in a Field\n// export default ({ name, onChange, ...rest }) => (\n//   <Field\n//     name={name}\n//     subscription={{ value: true, active: true }}\n//     render={props => (\n//       <MyFieldAdapter {...props} onChange={onChange}>\n//         <Field name={name} {...rest} />\n//       </MyFieldAdapter>\n//     )}\n//   />\n// );\nimport React from \"react\";\n\nconst MyField = (_ref) => {\n  let _ref$input = _ref.input,\n      onChange = _ref$input.onChange,\n      inputProps = _objectWithoutProperties(_ref$input, [\"onChange\"]),\n      handleChange = _ref.handleChange,\n      rest = _objectWithoutProperties(_ref, [\"input\", \"handleChange\"]);\n\n  return (// we spread out the \"inputProps\" and the \"rest\" of the props, then we add\n    // an \"onChange\" event handler that returns the \"event\" and the\n    // input's \"onChange\" func to our \"handleChange\" parent func\n    React.createElement(\"input\", Object.assign({}, inputProps, rest, {\n      onChange: e => handleChange(e, onChange),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default MyField;","map":{"version":3,"sources":["/home/paulina/door-custom/src/components/form/MyField.js"],"names":["React","MyField","input","onChange","inputProps","handleChange","rest","e"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG;AAAA,wBAGdC,KAHc;AAAA,MAGLC,QAHK,cAGLA,QAHK;AAAA,MAGQC,UAHR;AAAA,MAKdC,YALc,QAKdA,YALc;AAAA,MAOXC,IAPW;;AAAA,SASd;AACA;AACA;AACA,mDAAWF,UAAX,EAA2BE,IAA3B;AAAiC,MAAA,QAAQ,EAAEC,CAAC,IAAIF,YAAY,CAACE,CAAD,EAAIJ,QAAJ,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZc;AAAA,CAAhB;;AAeA,eAAeF,OAAf","sourcesContent":["// import React from \"react\";\n// import { Field } from \"react-final-form\";\n\n// class MyFieldAdapter extends React.Component {\n//   componentDidUpdate(prevProps) {\n//     if (this.props.meta.active && this.props.onChange) {\n//       this.props.onChange(this.props.input.value, prevProps.input.value);\n//     }\n//   }\n\n//   render() {\n//     return this.props.children;\n//   }\n// }\n\n// // Wrap the ExternalModificationDetector in a Field\n// export default ({ name, onChange, ...rest }) => (\n//   <Field\n//     name={name}\n//     subscription={{ value: true, active: true }}\n//     render={props => (\n//       <MyFieldAdapter {...props} onChange={onChange}>\n//         <Field name={name} {...rest} />\n//       </MyFieldAdapter>\n//     )}\n//   />\n// );\n\nimport React from \"react\";\n\nconst MyField = ({\n  // we'll intercept redux's \"onChange\" func, while leaving the other\n  // input props as is in \"inputProps\"\n  input: { onChange, ...inputProps },\n  // the \"handleChange\" func below is the parent func that will handle input changes\n  handleChange,\n  // \"rest\" contains any additional properties (className, placeholder, type ...etc)\n  ...rest\n}) => (\n  // we spread out the \"inputProps\" and the \"rest\" of the props, then we add\n  // an \"onChange\" event handler that returns the \"event\" and the\n  // input's \"onChange\" func to our \"handleChange\" parent func\n  <input {...inputProps} {...rest} onChange={e => handleChange(e, onChange)} />\n);\n\nexport default MyField;"]},"metadata":{},"sourceType":"module"}