{"ast":null,"code":"import _objectWithoutProperties from \"/home/paulina/door-custom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/paulina/door-custom/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./Bootstrap.css\";\nimport SignIn from \"./auth/SignIn\";\nimport SignUp from \"./auth/SignUp\";\nimport ResetPassword from \"./auth/ResetPassword\";\nimport ChangePassword from \"./auth/ChangePassword\";\nimport Dashboard from \"./auth/Dashboard\";\nimport NoMatch from \"./auth/NoMatch\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false\n    };\n  }\n\n  render() {\n    const fakeAuth = {\n      isAuthenticated: false,\n\n      authenticate(cb) {\n        this.isAuthenticated = true;\n        setTimeout(cb, 100);\n      },\n\n      signout(cb) {\n        this.isAuthenticated = false;\n        setTimeout(cb, 100);\n      }\n\n    };\n\n    const PrivateRoute = (_ref) => {\n      let Component = _ref.component,\n          rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n      return React.createElement(Route, Object.assign({}, rest, {\n        render: props => this.state.isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Route //przekierowanie na signin ze strony glownej localhost:3000\n    , {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignIn\n      /*sciezka do signin = localhost:3000/signin */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      component: SignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/resetpassword\",\n      component: ResetPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/changepassword\",\n      component: ChangePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NoMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/paulina/door-custom/src/App.js"],"names":["React","Component","SignIn","SignUp","ResetPassword","ChangePassword","Dashboard","NoMatch","BrowserRouter","Router","Route","Switch","Redirect","App","constructor","props","state","isAuthenticated","render","fakeAuth","authenticate","cb","setTimeout","signout","PrivateRoute","component","rest","pathname","from","location"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Bootstrap.css\";\n\nimport SignIn from \"./auth/SignIn\";\nimport SignUp from \"./auth/SignUp\";\nimport ResetPassword from \"./auth/ResetPassword\";\nimport ChangePassword from \"./auth/ChangePassword\";\nimport Dashboard from \"./auth/Dashboard\";\n\nimport NoMatch from \"./auth/NoMatch\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false\n    };\n  }\n\n  render() {\n\n    const fakeAuth = {\n      isAuthenticated: false,\n      authenticate(cb) {\n        this.isAuthenticated = true\n        setTimeout(cb, 100)\n      },\n      signout(cb) {\n        this.isAuthenticated = false\n        setTimeout(cb, 100)\n      }\n    }\n\n    const PrivateRoute = ({ component: Component, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        this.state.isAuthenticated === true\n          ? <Component {...props} />\n          : <Redirect to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }} />\n      )} />\n    )\n\n    return (\n      <Router>\n        <Switch>\n          <Route //przekierowanie na signin ze strony glownej localhost:3000\n            exact\n            path=\"/\"\n            render={() => <Redirect to={\"/signin\"} />}\n          />\n          <Route\n            path={\"/signin\"}\n            component={SignIn} /*sciezka do signin = localhost:3000/signin */\n          />\n          <Route path={\"/signup\"} component={SignUp} />\n          <Route path={\"/resetpassword\"} component={ResetPassword} />\n          <Route path={\"/changepassword\"} component={ChangePassword} />\n          <PrivateRoute path={\"/dashboard\"} component={Dashboard} />\n          <Route component={NoMatch} />\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}